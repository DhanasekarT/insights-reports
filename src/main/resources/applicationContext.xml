<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- <mvc:annotation-driven /> -->

	<!-- <context:component-scan base-package="org.gooru.insights"> -->
	<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
	<!-- </context:component-scan> -->

	<!-- <context:annotation-config /> -->
	<bean id="tomcatUsername" class="java.lang.String">
		<constructor-arg>
			<value>${tomcat.username}</value>
		</constructor-arg>
	</bean>

	<bean id="tomcatPassword" class="java.lang.String">
		<constructor-arg>
			<value>${tomcat.password}</value>
		</constructor-arg>
	</bean>


	<bean id="redisLongTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<bean id="redisStringTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="port" value="6379" />
		<property name="hostName" value="${redis.server.host}" />
	</bean>
	
	<!-- some pre-configured messages also which are ready to send -->
	<bean id="preConfiguredMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="to" value="arokiadaniel.a@goorulearning.org"></property>
		<property name="from" value="reports@goorulearning.org"></property>
		<property name="subject" value="FATAL - Application crash. Save your job !!" />
	</bean>

		<!-- default Mailer configuration -->
	<bean id="defaultMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="${smtp.gmail.username}" />
		<property name="password" value="${smtp.gmail.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">false</prop>
			</props>
		</property>
	</bean>
	
	<!-- schduler for removing files -->
	<bean id="schedulerJob" class="org.gooru.insights.scheduler.SchedulerJob" />
	
	<bean id="removeExpiredFileJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
         <property name="targetObject" ref="schedulerJob" />
         <property name="targetMethod" value="removeExpiredFiles" />
    </bean>
       
    <bean id="removeExpiredFileJobTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
         <property name="jobDetail" ref="removeExpiredFileJobDetail" />
         <property name="repeatInterval" value="10000" />
         <property name="startDelay" value="1000" />
    </bean>
       
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
       <property name="jobDetails">
          <list>
             <ref bean="removeExpiredFileJobDetail" />
          </list>
       </property>
       <property name="triggers">
          <list>
             <ref bean="removeExpiredFileJobTrigger" />
          </list>
       </property>
   </bean>
       
</beans>
